[telafric]
exten => s,1,Answer()
 same => n,Set(phone_number=${URIENCODE(${CALLERID(num)})})  ; Set phone_number to the caller's number
 ;same => n,Set(call_start=${EPOCH})  ; Capture call start time
 same => n,NoOp(Caller phone number: ${phone_number})
 same => n,Set(subscriber_check_url=https://ids-slw6.onrender.com/api/validate_subscriber?phone_number=${phone_number})
 same => n,Set(subscriber_response=${SHELL(curl -sL '${subscriber_check_url}' | tr -d '\n')})
 same => n,NoOp(Subscriber Response: ${subscriber_response})
 same => n,GotoIf($["${subscriber_response}" = "true"]?valid_subscriber,1:non_subscriber,1)

exten => valid_subscriber,1,NoOp(Valid subscriber)
 same => n,Background(custom/tomakeacall)
 same => n,Background(custom/totopup)
 same => n,Background(custom/checkbalance)
 same => n,WaitExten(10)

exten => non_subscriber,1,NoOp(Non-subscriber)
 same => n,Background(custom/tosubscribe)
 same => n,Background(custom/moreinfo)
 same => n,WaitExten(10)

; Valid subscriber options
exten => 1,1,GotoIf($["${subscriber_response}" = "true"]?make_call,1:subscribe,1)
exten => 2,1,GotoIf($["${subscriber_response}" = "true"]?topup,1:telafricinfo,1)
exten => 3,1,GotoIf($["${subscriber_response}" = "true"]?check_balance,1:subscribe,1)   


; Non-subscriber specific options
exten => subscribe,1,NoOp(Starting subscription process)
 same => n,Set(subscribe_url=https://ids-slw6.onrender.com/api/subscribe?phone_number=${phone_number})
 same => n,Set(subscribe_response=${SHELL(curl -sL '${subscribe_url}')})
 same => n,NoOp(Subscribe Response: ${subscribe_response})
 same => n,Goto(parse_subscribe_response,1)


exten => parse_subscribe_response,1,Set(status=${SHELL(echo '${subscribe_response}' | jq -r .status)})
 same => n,Set(pin_code=${SHELL(echo '${subscribe_response}' | jq -r .pin_code)})
 same => n,NoOp(Subscription status: ${status})
 same => n,NoOp(PIN Code: ${pin_code})
 same => n,Set(is_success=$[${status} = true])
 same => n,NoOp(Is Success: ${is_success})
 same => n,GotoIf(${is_success}?subscription_success,1:subscription_failed,1)

exten => subscription_success,1,NoOp(Subscription successful)
 same => n,Background(custom/subscribethanks)
 same => n,Background(custom/yourpinis)
 same => n,SayDigits(${pin_code})
 same => n,Goto(s,1)

exten => subscription_failed,1,NoOp(Subscription failed)
 same => n,Background(custom/subscribefailed)
 same => n,Hangup()

exten => subscribe_api_error,1,NoOp(Subscribe API Error: ${subscribe_response})
 same => n,Background(custom/subscribefailed)
 same => n,Hangup()

exten => telafricinfo,1,Background(custom/telafricinfo2)
 same => n,Goto(non_subscriber,1)

; Subscriber-only options
exten => make_call,1,NoOp(Starting call process)
 same => n,Goto(7700,1)

exten => topup,1,NoOp(Starting top-up process)
 same => n,Goto(7800,1)



; Making a Call Flow
exten => 7700,1,NoOp(Starting call process)
 same => n,Background(custom/enterpin)  ; Play a background message prompting for PIN
 ;same => n,Read(pin_code,,10)  ; Allow user to enter their PIN (4 digits)
 same => n,Read(pin_code,,4,,,10)
 same => n,Set(pin_validation_url=https://ids-slw6.onrender.com/api/validate_pin?phone_number=${phone_number}&pin_code=${pin_code})  ; Use the same phone_number
 same => n,Set(pin_validation_response=${SHELL(curl -sL '${pin_validation_url}' | tr -d '\n')})
 same => n,NoOp(PIN Validation Response: ${pin_validation_response})
 same => n,GotoIf($["${pin_validation_response}" = "true"]?get_destination,1:pin_validation_failed,1)

exten => get_destination,1,NoOp(Valid PIN, proceeding to enter destination)
 ;same => n,Background(custom/enternumber)  ; Play a background message prompting for destination entry
 ;same => n,Read(destination,,45,,,10)  ; Now prompt user to enter the destination number
 same => n,Read(destination,custom/enternumber,20,g,3,15)
 same => n,GotoIf($["${READSTATUS}" = "TIMEOUT"]?timeout,1)
 same => n,GotoIf($["${READSTATUS}" = "INVALID"]?invalid,1)
 same => n,Set(CONNECTEDLINE(num,i)=${destination})
 same => n,Set(CONNECTEDLINE(name,i)=CID:${CALLERID(num)})
 same => n,Goto(check_credit,1)
 ;same => n,Set(CHANNEL(hangup_handler_push)=balance_monitor,s,1)
 ;same => n,Dial(SIP/Connexcs/${destination},300,Tt)

exten => pin_validation_failed,1,NoOp(PIN validation failed)
 same => n,Background(custom/incorrectpin)
 same => n,Hangup()

exten => topup,1,NoOp(Starting top-up process)
 same => n,Goto(7800,1)

exten => 7800,1,NoOp(Online Top-Up Option)
 same => n,Set(topup_url=https://ids-slw6.onrender.com/api/send_sms)
 same => n,Set(curl_response=${SHELL(curl -X POST -H "Content-Type: application/json" -d '{"phone_number":"${phone_number}","message":"Follow this link to top-up: https://yourwebsite.com/topup"}' ${topup_url})})
 same => n,NoOp(SMS API Response: ${curl_response})
 same => n,Background(custom/smssent)
 same => n,Hangup()


exten => t,1,Background(custom/goodbye)
 same => n,Hangup()

exten => i,1,Background(custom/invalid-option)
 same => n,Goto(s,1)


exten => balance_error,1,NoOp(Balance retrieval error)
 same => n,Background(custom/balance-unavailable)
 same => n,Goto(s,1)

exten => balance_depleted,1,NoOp(Balance depleted, ending call)
 same => n,Playback(custom/balance-depleted)
 same => n,Hangup()

;can combine both apis probably and just receive the max_duration from api?
exten => check_credit,1,NoOp(Checking credit and setting call limit)
 same => n,Set(credit_check_url=https://ids-slw6.onrender.com/api/check_credit?phone_number=${phone_number}&destination=${URIENCODE(${destination})})
same => n,NoOp(Destination: ${destination}, Destination: ${URIENCODE(${destination})})
;same => n,Set(credit_check_url=https://ids-slw6.onrender.com/api/check_credit?phone_number=${SHELL(echo ${phone_number} | sed 's/^\+/%2B/')}&destination=${URIENCODE(${destination})})
 same => n,Set(credit_check_response=${SHELL(curl -sL '${credit_check_url}')})
 same => n,NoOp(Credit check response: ${credit_check_response})
 same => n,Set(error_check=${SHELL(echo '${credit_check_response}' | jq -r '.error // empty')})
 same => n,GotoIf($["${error_check}" != ""]?api_error,1)
 same => n,Set(current_balance=${SHELL(echo '${credit_check_response}' | jq -r .balance)})
 same => n,Set(call_rate=${SHELL(echo '${credit_check_response}' | jq -r .rate)})
 same => n,Set(max_duration=${SHELL(echo '${credit_check_response}' | jq -r .max_duration)})
 same => n,Set(minutes=${SHELL(echo '${credit_check_response}' | jq -r .minutes)})
 same => n,Set(seconds=${SHELL(echo '${credit_check_response}' | jq -r .seconds)})
 same => n,NoOp(Current balance: ${current_balance}, Call rate: ${call_rate}, Max duration: ${max_duration},Minutes: ${minutes},Seconds: ${seconds},)
 same => n,GotoIf($[${max_duration} < 10]?insufficient_credit,1)
;here we would mention how long call can last
;same => n,Set(call_start=${EPOCH})  ; Capture call start time
 same => n,Playback(custom/calltime)
 same => n,SayNumber(${minutes})
 same => n,Playback(custom/minutes)
 same => n,Playback(custom/and)
 same => n,SayNumber(${seconds})
 same => n,Playback(custom/seconds)
 ;same => n,SayNumber(${max_duration})
 ;same => n,Playback(custom/seconds)
 same => n,Set(call_start=${EPOCH})  ; Capture call start time
 same => n,Dial(SIP/Connexcs/${destination},${max_duration},Tt)
 same => n,Hangup()

exten => api_error,1,NoOp(Error calling credit check API: ${error_check})
 same => n,Background(custom/system-error)
 same => n,Hangup()

exten => insufficient_credit,1,NoOp(Insufficient credit for call)
 same => n,Background(custom/insufficientcredit)
 same => n,Hangup()




exten => h,1,NoOp(Call ended, sending billing information)
 same => n,Set(call_end=${EPOCH})
 same => n,Set(call_duration=$[${call_end} - ${call_start}])
 same => n,Set(billing_url=https://ids-slw6.onrender.com/api/bill_call?phone_number=${phone_number}&duration=${call_duration}&destination=${URIENCODE(${destination})})
 same => n,System(curl -sL '${billing_url}')
 same => n,NoOp(Billing information sent for ${phone_number}, duration: ${call_duration} seconds, destination: ${destination})
